name: eks-deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.inputs.version }}
      IMAGE: docker.io/biplopdey/connect4-java:${{ github.event.inputs.version }}
      CLUSTER_NAME: ${{ vars.EKS_CLUSTER }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up kind cluster
        uses: helm/kind-action@v1

      - name: Deploy to local cluster
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/connect4-java connect4-java=${{ env.IMAGE }}
          kubectl wait --for=condition=available --timeout=90s deployment/connect4-java

      - name: Port forward service
        run: |
          kubectl port-forward service/connect4-java 8080:8080 >/tmp/pf.log 2>&1 &
          echo $! > /tmp/pf.pid

      - name: Smoke test locally
        uses: ./.github/actions/smoke-test
        with:
          url: http://localhost:8080
          version: ${{ env.IMAGE_TAG }}

      - name: Cleanup local cluster
        if: always()
        run: |
          kill $(cat /tmp/pf.pid) 2>/dev/null || true
          kind delete cluster
          rm -f ~/.kube/config /tmp/pf.pid /tmp/pf.log

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install eksctl
        uses: aws-actions/amazon-eks-eksctl@v1

      - name: Create EKS cluster if needed
        run: |
          eksctl get cluster --name "$CLUSTER_NAME" --region ${{ vars.AWS_REGION }} || \
          eksctl create cluster --name "$CLUSTER_NAME" --region ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        uses: aws-actions/amazon-eks-login@v1
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          region: ${{ vars.AWS_REGION }}

      - name: Apply manifests
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/connect4-java connect4-java=${{ env.IMAGE }}

      - name: Wait for service URL
        id: service
        run: |
          set -e
          for i in {1..60}; do
            HOST=$(kubectl get svc connect4-java -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [ -n "$HOST" ]; then
              echo "url=http://$HOST" >> "$GITHUB_OUTPUT"
              exit 0
            fi
            echo "Waiting for serviceâ€¦ ($i/60)"
            sleep 5
          done
          echo "Service load balancer hostname not available" >&2
          exit 1

      - name: Test actuator endpoints
        uses: ./.github/actions/smoke-test
        with:
          url: ${{ steps.service.outputs.url }}
          version: ${{ env.IMAGE_TAG }}
