name: local-k8s-test

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Application version to test'
        required: true

jobs:
  local-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.inputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up kind cluster
        uses: helm/kind-action@v1

      - name: Deploy to local cluster
        run: |
          kubectl apply -f k8s/
          kubectl set image deployment/connect4-java connect4-java=docker.io/biplopdey/connect4-java:${{ env.IMAGE_TAG }}
          kubectl wait --for=condition=available --timeout=90s deployment/connect4-java

      - name: Start port-forward
        run: |
          # Ensure the Service has endpoints before forwarding
          for i in {1..60}; do
            if kubectl get endpoints connect4-java -o jsonpath='{.subsets[*].addresses[*].ip}' | grep -q '[0-9]'; then
              echo "Service endpoints are ready"
              break
            fi
            echo "Waiting for service endpoints... ($i/60)"
            sleep 1
          done

          # Start port-forward in background and capture PID
          kubectl port-forward service/connect4-java 8080:8080 >/tmp/pf.log 2>&1 &
          echo $! > /tmp/pf.pid

          # Wait until port-forward reports it's listening or the process exits
          for i in {1..20}; do
            if grep -q 'Forwarding from 127.0.0.1:8080' /tmp/pf.log || grep -q 'Forwarding from \[::1\]:8080' /tmp/pf.log; then
              echo "Port-forward is active"
              break
            fi
            if ! kill -0 $(cat /tmp/pf.pid) 2>/dev/null; then
              echo 'Port-forward process exited unexpectedly. Log follows:'
              cat /tmp/pf.log || true
              exit 1
            fi
            sleep 1
          done

      - name: Smoke test locally
        uses: ./.github/actions/smoke-test
        with:
          url: http://localhost:8080

      - name: Show port-forward log on failure
        if: failure()
        run: |
          echo '---- /tmp/pf.log ----'
          cat /tmp/pf.log || true

      - name: Cleanup local cluster
        if: always()
        run: |
          kill $(cat /tmp/pf.pid) 2>/dev/null || true
          kind delete cluster
          rm -f ~/.kube/config /tmp/pf.pid /tmp/pf.log

